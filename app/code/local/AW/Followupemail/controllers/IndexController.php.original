<?php

/**
 * aheadWorks Co.
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the EULA
 * that is bundled with this package in the file LICENSE.txt.
 * It is also available through the world-wide-web at this URL:
 * http://ecommerce.aheadworks.com/AW-LICENSE-COMMUNITY.txt
 * 
 * =================================================================
 *                 MAGENTO EDITION USAGE NOTICE
 * =================================================================
 * This package designed for Magento COMMUNITY edition
 * aheadWorks does not guarantee correct work of this extension
 * on any other Magento edition except Magento COMMUNITY edition.
 * aheadWorks does not provide extension support in case of
 * incorrect edition usage.
 * =================================================================
 *
 * @category   AW
 * @package    AW_Followupemail
 * @copyright  Copyright (c) 2009-2010 aheadWorks Co. (http://www.aheadworks.com)
 * @license    http://ecommerce.aheadworks.com/AW-LICENSE-COMMUNITY.txt
 */
class AW_Followupemail_IndexController extends Mage_Core_Controller_Front_Action
{
    /*
     * Unsubscribes customer
     */
    public function unsubscribeAction()
    {
        if($code = $this->getRequest()->getParam('code'))
        {
            if(!$queue = Mage::getModel('followupemail/queue')->loadByCode($code))
            {
                Mage::getSingleton('core/session')->addError($this->__('Wrong unsubscription code specified'));
                $this->_redirect('/');
                return;
            }
            $subscriber = Mage::getModel('followupemail/subscriber')->loadByEmail($queue->getRecipientEmail());
            if($subscriber->getId())
            {
                $subscriber->unsCheckCode()->unsubscribe();
                if(Mage_Newsletter_Model_Subscriber::STATUS_UNSUBSCRIBED == $subscriber->getSubscriberStatus())
                {
                    Mage::getSingleton('core/session')->addSuccess($this->__('Email %s was successfully unsubscribed', $queue->getRecipientEmail()));
                    $result = 'OK';
                }
                else
                {
                    Mage::getSingleton('core/session')->addError($this->__('Could not unsubscribe %s', $queue->getRecipientEmail()));
                    $result = 'Failed';
                }
            }
            else $result = 'Failed: The email is not subscribed';

            AW_Followupemail_Model_Log::logWarning('unsubscribe action, email '.$queue->getRecipientEmail().' result="'.$result.'" from queue_id='.$queue->getId());
        }
        if($goto = urldecode($this->getRequest()->getParam('goto')))
            $this->_redirect($goto);
        else $this->_redirect('/');
    }

    /*
     * Restores customer session and (if rule type was 'Cart has been abandened') customer's abandoned cart
     */
    public function resumeAction()
    {
        if($code = $this->getRequest()->getParam('code'))
        {
            if(!$queue = Mage::getModel('followupemail/queue')->loadByCode($code))
            {
                Mage::getSingleton('core/session')->addError($this->__('Wrong resume code specified'));
                $this->_redirect('/');
                return;
            }

            Mage::getModel('followupemail/linktracking')
                ->setId(null)
                ->setQueueId($queue->getId())
                ->setVisitedAt(date(AW_Followupemail_Model_Mysql4_Queue::MYSQL_DATETIME_FORMAT, time()))
                ->setVisitedFrom(isset($_SERVER['REMOTE_ADDR']) ? $_SERVER['REMOTE_ADDR'] : '')
                ->save();

            $rule = Mage::getModel('followupemail/rule')->load($queue->getRuleId());

            if(AW_Followupemail_Model_Source_Rule_Types::RULE_TYPE_ABANDONED_CART_NEW == $rule->getEventType())
            {
                if($quoteId = $queue->getObjectId())
                {
                    $quote = Mage::getModel('sales/quote')->load($quoteId);
                    Mage::getSingleton('checkout/session')->replaceQuote($quote); 

                    AW_Followupemail_Model_Log::logSuccess('abandoned cart restored, cart_id='.$quoteId.', queue_id='.$queue->getId());
                }
            }

            $customer = Mage::getModel('customer/customer')
                            ->setWebsiteId(Mage::app()->getStore()->getWebsiteId())
                            ->loadByEmail($queue->getRecipientEmail());

            if($customerId = $customer->getId())
            {
                $session = Mage::getSingleton('customer/session');
                if($session->isLoggedIn() && $customerId != $session->getCustomerId())
                    $session->logout();

                $session->setCustomerAsLoggedIn($customer);
            }

            Mage::getModel('followupemail/events')->customerCameBack($queue);

            if($goto = urldecode($this->getRequest()->getParam('goto')))
                $this->_redirect($goto);
            else $this->_redirect('checkout/cart');
        }
        else
        {
            Mage::getSingleton('core/session')->addError($this->__('No resume code cpecified'));
            $this->_redirect('/');
        }
    }
}