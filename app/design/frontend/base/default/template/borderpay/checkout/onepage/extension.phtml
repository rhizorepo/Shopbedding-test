<?php
$post = Mage::app()->getRequest()->getPost();
$session = Mage::getSingleton('checkout/session');

$session->setBorderpayTransactionId();
$session->setBorderpayTransactionType();

$op_block = $this->getLayout()->getBlock('checkout.onepage');

$step = Mage::app()->getRequest()->getParam('step');
$stepCodes = array('billing', 'shipping', 'shipping_method', 'payment', 'review');
if (($step) && (in_array($step,$stepCodes)) && ($op_block->getActiveStep() == 'billing' || $op_block->getActiveStep() == 'login')) {
    $checkout = Mage::getSingleton('checkout/type_onepage');
    if ($step == 'review') {
        $step = 'payment';
    }
    $billing = $session->getBorderpayBillingAddress();
    $shipping = $session->getBorderpayShippingAddress();
    $checkout->saveBilling($billing,false);
    $checkout->saveShipping($shipping,false);
    
    // The above doesn't save the street properly, so we manually do so here
    $checkout->getQuote()->getBillingAddress()->setStreetFull($billing['street']);
    $checkout->getQuote()->getShippingAddress()->setStreetFull($shipping['street']);
    
    $checkout->saveShippingMethod($session->getQuote()->getShippingAddress()->getShippingMethod());
    $activestep = $step;
} else if ($this->getActiveStep()) {
    $activestep = $this->getActiveStep();
}
?>

<?php if (isset($activestep)): ?>
    <script>
        jQuery(document).ready(function($) {
            checkout.accordion.openSection('opc-<?php echo $activestep; ?>');
        })
    </script>
<?php endif; ?>

<script>
var hasBorderpayRun = false;
var $form = jQuery('form#co-payment-form,form#firecheckout-form')

var saveOther = function() {
    var formData = $form.serialize();
    jQuery.ajax({
        type: 'POST',
        url: '<?php echo Mage::getUrl("checkout/onepage/submitPayment"); ?>',
        dataType: 'json',
        data: formData,
        success: otherResponseValidate,
        error: function(){ alert('Internal error.'); }
    });
}

var otherResponseValidate = function(data, status){
    if (data.error || status == 'error' || (typeof data.approval_code != 'undefined' && data.approval_code == null)) {
        alert('There was an error validating your payment information. Please contact customer service.');
    } else if (status == 'success') {
        otherPaymentSubmit(data, status);
    } else {
        alert('There was an error validating your payment information. Please contact customer service.');
    }
}

var otherPaymentSubmit = function(data, status) {
    $payment_form = $form;
    returnUrl = '<?php echo Mage::getUrl("checkout/onepage/authorizePayment"); ?>';
    
    $payment_form.attr('action', data.ACSUrl);
    $payment_form.attr('method', 'post');
    jQuery('#ACSUrl').val(data.ACSUrl);
    jQuery('#PaReq').val(data.payload);
    jQuery('#MD').val(data.transaction_id);
    jQuery('#TermUrl').val(returnUrl);
    jQuery('#third-party-submit').unbind('click');
    jQuery('#third-party-submit').unbind('submit');
    $payment_form.submit();
    this.setLoadWaiting(false);
}

jQuery(document).ready(function($) {
    if (hasBorderpayRun) {
        return;
    }
    hasBorderpayRun = true;
    var paypalDirect =  '2';
    var safetypay =     '5';
    var planetPayment = '6';
    //var $savePaymentButton = $('.button[onclick="payment.save();"]');
    var $savePaymentButton = $('#payment-button-continue');

    $form.prepend('<input id="ioBlackBox" type="hidden" name="ioBlackBox"/>');
    
    // Reroute the submit payment method to use our own handler when BorderPay is selected
    $form.find('input[name="payment[method]"]').live('change', function(e) {
        if ($form.find('input[name="payment[method]"]:checked').val() == 'borderpay') {
            $savePaymentButton.unbind('click');
            $savePaymentButton.attr('onclick', null);
            $savePaymentButton.click(dispatchPayment);
        } else {
            $savePaymentButton.unbind('click'); // or use $savePaymentButton.attr('onclick', '');
			$savePaymentButton.setAttribute('onclick', 'payment.save()');
        }
    });
    $form.find('input[name="payment[method]"]').trigger('change');
    
    function dispatchPayment() {
        $('#fingerprint').val($('#ioBlackBox').val());
        checkout.setLoadWaiting('payment');
        var formData = $form.serialize();
        $.ajax({
            type: 'POST',
            url: '<?php echo Mage::getUrl("checkout/onepage/saveAdditionalData"); ?>',
            dataType: 'json',
            data: formData,
            success: function(){
                var paymentService = $('#borderpay_service').val();
                if ( ! paymentService) {
                    checkout.setLoadWaiting(false);
                    return;
                } else if (paymentService == 6) {
                    saveCc();
                } else {
                    saveOther();
                }
            },
            error: function(){ alert('Internal error.'); }
        });
    }
    
    function saveCc() {
        oldCreditCartTypes = Validation.creditCartTypes.toObject();
        Validation.creditCartTypes = $H();
        Validation.creditCartTypes.set('visa', oldCreditCartTypes['VI']);
        Validation.creditCartTypes.set('amex', oldCreditCartTypes['AE']);
        Validation.creditCartTypes.set('master', oldCreditCartTypes['MC']);
        Validation.creditCartTypes.set('discover', oldCreditCartTypes['DI']);
        Validation.creditCartTypes.set('diners_club', oldCreditCartTypes['OT']);
        Validation.creditCartTypes.set('jcb', oldCreditCartTypes['JCB']);
        
        var validator = new Validation(payment.form);
        if (validator.validate()) {
            var request = new Ajax.Request(
                payment.saveUrl,
                {
                    method: 'post',
                    onComplete: payment.onComplete,
                    onSuccess: payment.onSave,
                    onFailure: checkout.ajaxFailure.bind(checkout),
                    parameters: Form.serialize(payment.form)
                }
            );
        } else {
            checkout.setLoadWaiting(false);
        }
        Validation.creditCartTypes = $H(oldCreditCartTypes);
    }
});
</script>